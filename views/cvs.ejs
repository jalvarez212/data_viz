<!DOCTYPE html>
<html>
  <head>
    <title>NYC Population Data</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <script src="/js/data.js"></script>
    <style>
      body {background-size: cover;}
      #viewBox 
      {width: 100%}
      svg 
      {width: 100%}
    </style> 
  </head>
  <body>
    <h1>NYC Population Data:</h1>
    <p> 2010 - 2019</p>
    <select id="Selector"></select>
    <br>
    <br>
    <div id="viewBox"></div>
    <script type="text/javascript">

 //define function to format data into html
 function dataFormat(arr){
 	
 	arr.forEach(function(r){
 		var opt = document.createElement("option");
 		opt.text = r['Area'];
		opt.value = r['Area'];
 		var e = document.getElementById('Selector');
 		e.appendChild(opt)
 		
	 	})

 }
// set the dimensions and margins of the graph
var margin = {top: 10, right: 30, bottom: 30, left: 60},
    width = 460 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

// append the svg object to the body of the page
var svg = d3.select("#viewBox")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

//----------------------------SCALES----------------------------//
const xScale = d3.scaleLinear().range([0,width]).domain([2010,2019]);
const yScale = d3.scaleLinear().rangeRound([height, 0]).domain([8100000,8500000]);


//-----------------------------AXES-----------------------------//
formatValue = d3.format(".3s");
const yaxis = d3.axisLeft()
    .scale(yScale)
    .tickFormat(function(d) { return formatValue(d)});


const xaxis = d3.axisBottom()
   
    .scale(xScale)
    .tickFormat(d3.format("d"));

//-----------------------------AXES-----------------------------//
svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xaxis);

svg.append("g")
    .attr("class", "axis")
    .call(yaxis)
    .append("text")
    .attr("transform", "rotate(-90)")
    .attr("dy", ".75em")
    .attr("y", 6)
    .style("text-anchor", "end")
    .text("Frequency");

//----------------------------LINES-----------------------------//
//Read the data
var a = [];
d3.csv("/js/data.csv",

  // When reading the csv, I must format variables:
  function(d){
  	a.push(d);
  
  },





  // Now I can use this dataset:


)


setTimeout(function(){dataFormat(a)}, 2000);


		  
    </script>

  </body>
</html>
